"use strict";(()=>{var e={};e.id=9085,e.ids=[9085],e.modules={96330:e=>{e.exports=require("@prisma/client")},10846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},55511:e=>{e.exports=require("crypto")},4573:e=>{e.exports=require("node:buffer")},77598:e=>{e.exports=require("node:crypto")},57975:e=>{e.exports=require("node:util")},22588:(e,r,t)=>{t.r(r),t.d(r,{patchFetch:()=>w,routeModule:()=>R,serverHooks:()=>h,workAsyncStorage:()=>j,workUnitAsyncStorage:()=>y});var s={};t.r(s),t.d(s,{DELETE:()=>m,GET:()=>x,PUT:()=>f,dynamic:()=>p});var n=t(42706),o=t(28203),i=t(45994),a=t(39187),u=t(49402),d=t(60399);let p="force-dynamic",l=new u.W,c=new d.u;async function x(e,{params:r}){try{if(!await c.hasPermission("view_roles"))return a.NextResponse.json({error:"Unauthorized: Insufficient permissions"},{status:403});let e=await l.findById(r.id);if(!e)return a.NextResponse.json({error:"Role not found"},{status:404});return a.NextResponse.json(e)}catch(e){return console.error("Error fetching role:",e),a.NextResponse.json({error:"Failed to fetch role"},{status:500})}}async function f(e,{params:r}){try{if(!await c.hasPermission("edit_roles"))return a.NextResponse.json({error:"Unauthorized: Insufficient permissions"},{status:403});let t=await e.json();if(!t.name)return a.NextResponse.json({error:"Role name is required"},{status:400});if(!await l.findById(r.id))return a.NextResponse.json({error:"Role not found"},{status:404});let s=Array.isArray(t.permissions)?t.permissions:void 0,n=await l.update(r.id,{name:t.name,nameArabic:t.nameArabic,description:t.description,descriptionArabic:t.descriptionArabic},s);return a.NextResponse.json(n)}catch(e){return console.error("Error updating role:",e),a.NextResponse.json({error:"Failed to update role"},{status:500})}}async function m(e,{params:r}){try{if(!await c.hasPermission("delete_roles"))return a.NextResponse.json({error:"Unauthorized: Insufficient permissions"},{status:403});let e=await l.findById(r.id);if(!e)return a.NextResponse.json({error:"Role not found"},{status:404});if(["ADMIN","SUPER_ADMIN","USER"].includes(e.name))return a.NextResponse.json({error:"Cannot delete built-in roles"},{status:403});return await l.delete(r.id),a.NextResponse.json({success:!0})}catch(e){return console.error("Error deleting role:",e),a.NextResponse.json({error:"Failed to delete role"},{status:500})}}let R=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/admin/roles/[id]/route",pathname:"/api/admin/roles/[id]",filename:"route",bundlePath:"app/api/admin/roles/[id]/route"},resolvedPagePath:"D:\\press\\src\\app\\api\\admin\\roles\\[id]\\route.ts",nextConfigOutput:"standalone",userland:s}),{workAsyncStorage:j,workUnitAsyncStorage:y,serverHooks:h}=R;function w(){return(0,i.patchFetch)({workAsyncStorage:j,workUnitAsyncStorage:y})}}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,5452,4512,4926,7031,5371],()=>t(22588));module.exports=s})();